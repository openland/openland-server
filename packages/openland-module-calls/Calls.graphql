type Conference {
    id: ID!
    peers: [ConferencePeer!]!
}

type ConferencePeer {
    id: ID!
    user: User!
}

type ConferenceJoinResult {
    peerId: ID!
    conference: Conference!
}

extend type Query {
    conference(id: ID!): Conference!
}

extend type Mutation {
    conferenceJoin(id: ID!): ConferenceJoinResult!
    conferenceKeepAlive(id: ID!, peerId: ID!): Conference!
    conferenceLeave(id: ID!, peerId: ID!): Conference!
}

extend type Subscription {
    alphaConferenceWatch(id: ID!): Conference!
}
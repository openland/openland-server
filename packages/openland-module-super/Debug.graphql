enum DebugEmailType {
    WELCOME
    ACCOUNT_ACTIVATED
    ACCOUNT_DEACTIVATED
    MEMBER_REMOVED
    MEMBERSHIP_LEVEL_CHANGED
    INVITE
    MEMBER_JOINED
    SIGNUP_CODE
    SIGIN_CODE
    UNREAD_MESSAGE
    UNREAD_MESSAGES
    PUBLIC_ROOM_INVITE
    PRIVATE_ROOM_INVITE
    ROOM_INVITE_ACCEPTED
    WEEKLY_DIGEST
}

type DebugID {
    numberID: Int
    stringID: String
    type: String!
}

type DebugUserPresence {
    user: User!
    lastSeen: Date!
    lastSeenStr: String!
    lastSeenTimeout: Int!
    platform: String
    active: Boolean
}

type OrganizationChatStats {
    org: Organization!
    chat: SharedRoom!
    messagesCount: Int!
    lastMessageDate: String!
}

type DebugEventsState {
    state: String
}

type DebugEvent {
    seq: Int!
    key: String!
}

type DebugUserMetrics {
    messagesSent: Int!
    messagesReceived: Int!
    totalChatsCount: Int!
    directChatsCount: Int!
    direct2WayChatsCount: Int!
    directMessagesSent: Int!
    successfulInvitesCount: Int!
    audienceCount: Int!
}

type DebugGlobalCounters {
    allUnreadMessages: Int!
    unreadMessagesWithoutMuted: Int!
    allUnreadChats: Int!
    unreadChatsWithoutMuted: Int!
}

extend type Query {
    debugParseID(id: ID!): DebugID!
    debugCrashQuery: String!
    debugUrlInfo(url: String!): UrlAugmentation
    userPresence(uid: ID!, lastSeenFiveMinute: Boolean): [DebugUserPresence!]!
    debugValidateMessages: String!
    organizationChatsStats: [OrganizationChatStats!]!
    debugEventsState: DebugEventsState!
    debugCheckTasksIndex: String!
    debug2WayDirectChatsCounter: Int!
    debugUserMetrics(id: ID!): DebugUserMetrics!
    debugGlobalCounters: DebugGlobalCounters!
}

enum SuperNotificationType {
    ON_SIGN_UP
    ON_USER_PROFILE_CREATED
    ON_ORG_ACTIVATED_BY_ADMIN
    ON_ORG_ACTIVATED_VIA_INVITE
    ON_ORG_SUSPEND
}

extend type Mutation {
    debugSendEmail(type: DebugEmailType!): Boolean
    debugCreateTestUser(key: String!, name: String!): User!
    debugDeleteUrlInfoCache(url: String!): Boolean
    debugDeleteUrlInfoCacheAll: Boolean
    debugSuperNotifications(type: SuperNotificationType!): Boolean!
    debugCalcUsersMessagingStats: Boolean!
    debugCalcUsersChatsStats: Boolean!
    debugConvertOrgChatToNormal(orgId: ID!): Boolean!
    debugDeleteEmptyOrgChats: Boolean!
    debugFixCommentsVisibility: Boolean!
    debugSetCommentVisibility(commentId: ID!, visible: Boolean!): Boolean!
    debugRemoveDeletedDialogs: Boolean!
    debugReindexOrgs(marActivatedOrgsListed: Boolean!): Boolean!
    debugFixUserDialogsIndex: Boolean!
    debugCalcRoomsActiveMembers: Boolean!
    debugCalcOrgsActiveMembers: Boolean!
    debugCreateCommentSubscriptions: Boolean!
    debugDeveloperInit: Boolean!
    debugResetAudienceCounter(uid: ID): Boolean!
    debugCalcUsersAudienceCounter: Boolean!
    debugCalcUsers2WayDirectChatsCounter: Boolean!
    debugFixMessage(id: Int!): Boolean!
    debugEnableNotificationCenterForAll: Boolean!
    debugResetGlobalCounters: Boolean!
    debugCalcGlobalCountersForAll: Boolean!
    debugValidateGlobalCountersForAll: Boolean!
    debugCreateBigChat(membersCount: Int!): Boolean!
    debugFlood(chat: ID!, messagesCount: Int!): Boolean!
    debugQueueDailyEngagementReport: Boolean!
    debugQueueDailyOnboardingReport: Boolean!
    debugQueueWeeklyEngagementReport: Boolean!
    debugQueueWeeklyOnboardingReport: Boolean!
    debugQueueWeeklyUserLeaderboard: Boolean!
    debugQueueWeeklyRoomLeaderboard: Boolean!
    debugQueueWeeklyRoomByMessagesLeaderboard: Boolean!
    debugReindexUserProfiles: Boolean!
    debugReindexRoomProfiles: Boolean!
    debugSendPush(id: ID!, message: String!): Boolean!
}

extend type Subscription {
    debugEvents(fromState: String, eventsCount: Int!, randomDelays: Boolean!, seed: String!): DebugEvent!
    debugReaderState(reader: String!): String!
}
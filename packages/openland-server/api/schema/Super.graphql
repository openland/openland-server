#
# Super Accounting
#

enum SuperAccountState {
    PENDING,
    ACTIVATED,
    SUSPENDED
}

type SuperAccount {
    id: ID!
    orgId: ID!
    title: String!
    name: String!
    state: SuperAccountState!
    members: [User!]!
    features: [FeatureFlag!]!
    alphaPublished: Boolean!
    createdAt: String,
    createdBy: User,
}

extend type Query {
    superAccounts: [SuperAccount!]!
    superAccount(id: ID!, viaOrgId: Boolean): SuperAccount!
}

extend type Mutation {
    superAccountAdd(title: String!): SuperAccount!
    superAccountRename(id: ID!, title: String!): SuperAccount!
    superAccountActivate(id: ID!): SuperAccount!
    superAccountSuspend(id: ID!): SuperAccount!
    superAccountPend(id: ID!): SuperAccount!

    superAccountMemberAdd(id: ID!, userId: ID!): SuperAccount!
    superAccountMemberRemove(id: ID!, userId: ID!): SuperAccount!

    superAccountChannelMemberAdd(id: ID!, userId: ID!): String!
}

#
# Super Admins
#

enum SuperAdminRole {
    SUPER_ADMIN,
    SOFTWARE_DEVELOPER,
    EDITOR
}

type SuperAdmin {
    user: User!
    role: SuperAdminRole!
    email: String
}

extend type Mutation {
    superAdminAdd(userId: ID!, role: SuperAdminRole!): String!
    superAdminRemove(userId: ID!): String!
}

extend type Query {
    superAdmins: [SuperAdmin!]!
}

scalar OrganizationID
scalar OrganizationAccountID
scalar OrganizationListingID
scalar InviteID
scalar InviteInfoID
scalar StateID
scalar CountyID
scalar CityID
scalar UserID
scalar ProfileID
scalar DealID
scalar BlockID
scalar SuperAccountID
scalar SuperCityID
scalar FeatureFlagID
scalar OpportunitiesID
scalar DebugReaderID
scalar FolderID
scalar FolderItemID
scalar TaskID
scalar ConversationID
scalar ConversationSettingsID
scalar ConversationMessageID
scalar NotificationCounterID
scalar SettingsID
scalar WallEntityID
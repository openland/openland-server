union GlobalSearchEntry = Organization | User | SharedRoom

enum GlobalSearchEntryKind {
    ORGANIZATION
    USER
    SHAREDROOM
}

type MessageWithChat {
    message: ModernMessage!
    chat: Room!
}

type MessageEdge {
    node: MessageWithChat!
    cursor: String!
}

type MessageConnection {
    edges: [MessageEdge!]!
    pageInfo: PageInfo!
}

extend type Query {
    alphaGlobalSearch(query: String!, kinds: [GlobalSearchEntryKind!]): [GlobalSearchEntry!]!
    featuredGroups: [SharedRoom!]
    featuredCommunities: [Organization!]

    messagesSearch(query: String!, sort: String, first: Int!, after: String): MessageConnection!
    chatMembersSearch(cid: ID!, query: String, first: Int!, after: String, page: Int): UserConnection!
}
enum EmailFrequency {
    NEVER
    MIN_15
    HOUR_1
    HOUR_24
    WEEK_1
}

enum NotificationMessages {
    ALL
    DIRECT
    NONE
}

enum NotificationComments {
    ALL
    DIRECT
    NONE
}

enum CommentsNotificationDelivery {
    ALL
    NONE
}

enum NotificationsDelay {
    NONE
    MIN_1
    MIN_15
}

enum NotificationPreview {
    NAME_TEXT
    NAME
}

type ChatTypeNotificationSettings {
    showNotification: Boolean!
    sound: Boolean!
}

input ChatTypeNotificationSettingsInput {
    showNotification: Boolean!
    sound: Boolean!
}

type PlatformNotificationSettings {
    direct: ChatTypeNotificationSettings!
    secretChat: ChatTypeNotificationSettings!
    organizationChat: ChatTypeNotificationSettings!
    communityChat: ChatTypeNotificationSettings!
    comments: ChatTypeNotificationSettings!
    notificationPreview: NotificationPreview!
}


input PlatformNotificationSettingsInput {
    direct: ChatTypeNotificationSettingsInput
    secretChat: ChatTypeNotificationSettingsInput
    organizationChat: ChatTypeNotificationSettingsInput
    communityChat: ChatTypeNotificationSettingsInput
    comments: ChatTypeNotificationSettingsInput
    notificationPreview: NotificationPreview
}

input UpdateSettingsInput {
    emailFrequency: EmailFrequency
    desktop: PlatformNotificationSettingsInput
    mobile: PlatformNotificationSettingsInput
    countUnreadChats: Boolean
    excludeMutedChats: Boolean


    # Deprecated
    notificationsDelay: NotificationsDelay
    desktopNotifications: NotificationMessages
    mobileNotifications: NotificationMessages
    commentNotifications: NotificationComments
    commentNotificationsDelivery: CommentsNotificationDelivery,
    mobileAlert: Boolean
    mobileIncludeText: Boolean
    mute: Boolean
}

type Settings {
    id: ID!
    primaryEmail: String!
    emailFrequency: EmailFrequency!
    desktop: PlatformNotificationSettings!
    mobile: PlatformNotificationSettings!
    countUnreadChats: Boolean!
    excludeMutedChats: Boolean!

    # Deprecated
    notificationsDelay: NotificationsDelay!
    desktopNotifications: NotificationMessages!
    mobileNotifications: NotificationMessages!
    commentNotifications: NotificationComments!
    commentNotificationsDelivery: CommentsNotificationDelivery!
    mobileAlert: Boolean!
    mobileIncludeText: Boolean!
    mute: Boolean
}

type AuthPoint {
    email: String
    phone: String
}

extend type Query {
    settings: Settings!
    authPoints: AuthPoint!
}

extend type Mutation {
    settingsUpdate(settings: UpdateSettingsInput, uid: ID): Settings!

    sendEmailPairCode(email: String!): String!
    pairEmail(sessionId: String!, confirmationCode: String!): Boolean!

    sendPhonePairCode(phone: String!): String!
    pairPhone(sessionId: String!, confirmationCode: String!): Boolean!

    # Deprecated
    updateSettings(settings: UpdateSettingsInput): Settings!
}

extend type Subscription {
    settingsWatch: Settings!

    # Deprecated
    watchSettings: Settings!
}

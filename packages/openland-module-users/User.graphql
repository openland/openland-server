type User {
    id: ID!
    isYou: Boolean!
    isBot: Boolean!
    isDeleted: Boolean!
    name: String!
    firstName: String!
    lastName: String
    photo: String
    phone: String
    email: String
    website: String
    about: String
    location: String
    linkedin: String
    instagram: String
    twitter: String
    facebook: String
    audienceSize: Int!

    # TODO: Refactor
    channelsJoined: [ChannelConversation!]! @disabled

    # Deprecated: Will be removed soon
    photoRef: ImageRef
    picture: String
    pictureRef: ImageRef
    alphaRole: String
    alphaLinkedin: String
    alphaTwitter: String    
    alphaLocations: [String!]

    chatsWithBadge: [UserChatWithBadge!]!
}

type UserChatWithBadge {
    badge: UserBadge!
    chat: Room!
}

extend type Query {
    me: User
    user(id: ID!): User!
    mySuccessfulInvitesCount: Int!
}

extend type Mutation {
    reportContent(contentId: ID!, type: String!, message: String): Boolean
    deleteMyAccount: Boolean!
}
type CustomStatus {
    emoji: String
    text: String!
}

type BadgeStatus {
    badge: ModernBadge!
}

union Status = BadgeStatus | CustomStatus

type Profile {
    id: ID!
    firstName: String
    lastName: String
    photoRef: ImageRef
    phone: String
    email: String
    website: String
    about: String
    location: String
    linkedin: String
    instagram: String
    twitter: String
    facebook: String
    authEmail: String
    birthDay: Date
    status: Status

    # Deprecated
    alphaLinkedin: String
    alphaTwitter: String
    alphaJoinedAt: String
    alphaInvitedBy: User
    alphaRole: String
    alphaLocations: [String!]
}

input CustomStatusInput {
    emoji: String
    text: String
}

input BadgeStatusInput {
    id: ID!
}

input StatusInput {
    custom: CustomStatusInput
    badge: BadgeStatusInput
}

input ProfileInput {
    firstName: String
    lastName: String
    photoRef: ImageRefInput
    phone: String
    email: String
    website: String
    about: String
    location: String
    linkedin: String
    instagram: String
    twitter: String
    facebook: String
    primaryOrganization: ID
    birthDay: Date
    status: StatusInput
}

extend type Query {
    myProfile: Profile
}

type AlphaSignupData{
    user: User
    organization: Organization
}

extend type Mutation {
    profileCreate(input: ProfileInput!, inviteKey: String): Profile!
    profileUpdate(input: ProfileInput!, uid: ID, inviteKey: String): Profile!
}

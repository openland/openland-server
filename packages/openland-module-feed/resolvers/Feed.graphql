union FeedItem = FeedPost

union FeedPostAuthor = User

union FeedPostSource = FeedChannel

type FeedPost {
    #
    #   State
    #
    id: ID!
    date: Date!
    author: FeedPostAuthor!
    source: FeedPostSource
    canEdit: Boolean!
    edited: Boolean!
    reactions: [ModernMessageReaction!]!
    isMentioned: Boolean!

    #
    #   Content
    #
    message: String
    spans: [MessageSpan!]!
    attachments: [ModernMessageAttachment!]!
    commentsCount: Int!
    slides: [Slide!]!
    fallback: String!
}

type FeedItemConnection {
    items: [FeedItem!]!
    cursor: String
}

union Slide = TextSlide

union SlideAttachment = User | SharedRoom | Organization

type TextSlide {
    id: ID!
    text: String!
    spans: [MessageSpan!]!
    cover: Image
    coverAlign: SlideCoverAlign
    attachments: [SlideAttachment!]!
}

enum SlideType {
    Text
}

enum SlideCoverAlign {
    Top,
    Bottom,
    Cover
}

input SlideInput {
    type: SlideType!
    text: String
    spans: [MessageSpanInput!]
    mentions: [MentionInput!]
    cover: ImageRefInput
    coverAlign: SlideCoverAlign
    attachments: [ID!]
}

#
#   Channels
#

type FeedChannel {
    id: ID!
    title: String!
    about: String
    photo: String!
}

type FeedChannelConnection {
    items: [FeedChannel!]!
    cursor: String
}

union FeedSubscription = FeedChannel

extend type Query {
    alphaHomeFeed(first: Int!, after: String): FeedItemConnection!
    alphaFeedItem(id: ID!): FeedItem

    alphaFeedChannel(id: ID!): FeedChannel!
    alphaFeedChannelContent(id: ID!, first: Int!, after: String): FeedItemConnection!
#    alphaFeedChannelSubscriptions(id: ID!): [User!]!
    alphaFeedMySubscriptions: [FeedSubscription!]!
    alphaFeedMyChannels(first: Int!, after: ID): FeedChannelConnection!
}

extend type Mutation {
    alphaCreateFeedPost(channel: ID!, message: String, mentions: [MentionInput!], fileAttachments: [FileAttachmentInput!], spans: [MessageSpanInput!], slides: [SlideInput!], repeatKey: String): FeedItem!
    alphaEditFeedPost(feedItemId: ID!, message: String, mentions: [MentionInput!], fileAttachments: [FileAttachmentInput!], spans: [MessageSpanInput!], slides: [SlideInput!]): FeedItem!
    alphaDeleteFeedPost(feedItemId: ID!): Boolean!

    feedReactionAdd(feedItemId: ID!, reaction: MessageReactionType!): Boolean!
    feedReactionRemove(feedItemId: ID!, reaction: MessageReactionType!): Boolean!

    alphaFeedCreateChannel(title: String!, about: String, photoRef: ImageRefInput, global: Boolean): FeedChannel!
    alphaFeedUpdateChannel(id: ID!, title: String!, about: String, photoRef: ImageRefInput, global: Boolean): FeedChannel!
}
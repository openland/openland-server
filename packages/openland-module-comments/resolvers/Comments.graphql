type CommentsPeer {
    id: ID!
    state: CommentUpdatesState!
    count: Int!
    comments: [CommentEntry!]!
    peerRoot: CommentPeerRoot!
    subscription: CommentSubscription
}

type CommentEntry {
    id: ID!
    deleted: Boolean!
    comment: GeneralMessage!
    modernComment: ModernMessage!
    parentComment: CommentEntry
    childComments: [CommentEntry!]!
}

union CommentPeerRoot = CommentPeerRootMessage | CommentPeerRootFeedItem

type CommentPeerRootMessage {
    message: GeneralMessage!
    chat: Room!
}

type CommentPeerRootFeedItem {
    item: FeedItem!
}

enum CommentSubscriptionType {
    ALL,
    DIRECT
}

type CommentSubscription {
    type: CommentSubscriptionType
}

extend type Query {
    messageComments(messageId: ID!): CommentsPeer!
    feedItemComments(feedItemId: ID!): CommentsPeer!
}

extend type Mutation {
    addMessageComment(messageId: ID!, message: String, replyComment: ID, mentions: [MentionInput!], fileAttachments: [FileAttachmentInput!], spans: [MessageSpanInput!]): Boolean!
    betaAddMessageComment(messageId: ID!, message: String, replyComment: ID, mentions: [MentionInput!], fileAttachments: [FileAttachmentInput!], spans: [MessageSpanInput!], repeatKey: String): CommentEntry!
    betaAddMessageStickerComment(messageId: ID!, stickerId: ID!, replyComment: ID, repeatKey: String): CommentEntry!
    betaAddFeedComment(feedItemId: ID!, message: String, replyComment: ID, mentions: [MentionInput!], fileAttachments: [FileAttachmentInput!], spans: [MessageSpanInput!], repeatKey: String): CommentEntry!
    betaAddFeedStickerComment(feedItemId: ID!, stickerId: ID!, replyComment: ID, repeatKey: String): CommentEntry!
    editComment(id: ID!, message: String, mentions: [MentionInput!], fileAttachments: [FileAttachmentInput!], spans: [MessageSpanInput!]): Boolean!
    deleteComment(id: ID!): Boolean!
    deleteCommentAugmentation(id: ID!): Boolean!

    commentReactionAdd(commentId: ID!, reaction: MessageReactionType!): Boolean!
    commentReactionRemove(commentId: ID!, reaction: MessageReactionType!): Boolean!

    subscribeMessageComments(messageId: ID!, type: CommentSubscriptionType!): Boolean!
    unSubscribeMessageComments(messageId: ID!): Boolean!
}
type CommentUpdatesState {
    state: String
}

type CommentUpdateSingle {
    seq: Int!
    state: String!
    update: CommentUpdate!
}

type CommentUpdateBatch {
    seq: Int!
    state: String!
    fromSeq: Int!
    updates: [CommentUpdate!]!
}

union CommentUpdate = CommentReceived | CommentUpdated

type CommentReceived {
    comment: CommentEntry!
}

type CommentUpdated {
    comment: CommentEntry!
}

union CommentUpdateContainer = CommentUpdateSingle | CommentUpdateBatch

extend type Subscription {
    commentUpdates(peerId: ID!, fromState: String): CommentUpdateContainer
}
type CommentGlobalUpdatesState {
    state: String
}

type CommentGlobalUpdateSingle {
    seq: Int!
    state: String!
    update: CommentGlobalUpdate!
}

type CommentGlobalUpdateBatch {
    seq: Int!
    state: String!
    fromSeq: Int!
    updates: [CommentGlobalUpdate!]!
}

union CommentGlobalUpdate = CommentPeerUpdated

type CommentPeerUpdated {
    seq: Int!
    peer: CommentsPeer!
}

union CommentGlobalUpdateContainer = CommentGlobalUpdateSingle | CommentGlobalUpdateBatch

extend type Query {
    commentGlobalUpdatesState: CommentGlobalUpdatesState!
}

extend type Subscription {
    commentUpdatesGlobal(fromState: String): CommentGlobalUpdateContainer
}
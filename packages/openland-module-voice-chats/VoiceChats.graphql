type VoiceChat {
    id: ID!
    title: String
    adminsCount: Int!
    listenersCount: Int!
    speakersCount: Int!
    handRaisedCount: Int!
    active: Boolean!
    speakers: [VoiceChatParticipant!]!
    listeners: [VoiceChatParticipant!]!
    me: VoiceChatParticipant
    pinnedMessage: VoiceChatPinnedMessage
    parentRoom: SharedRoom
}

type VoiceChatJoinResult {
    chat: VoiceChat!
    peerId: ID!
    conference: Conference!
}

input VoiceChatInput {
    title: String!
    isPrivate: Boolean
}

type VoiceChatConnection {
    items: [VoiceChat!]!
    cursor: String
}

type VoiceChatPinnedMessage {
    id: ID!
    message: String
    spans: [MessageSpan!]!
}

extend type User {
    currentVoiceChat: VoiceChat
}

extend type Mutation {
    voiceChatCreate(input: VoiceChatInput!): VoiceChat!
    voiceChatCreateWithMedia(input: VoiceChatInput!, mediaInput: ConferenceJoinInput, mediaKind: ConferenceKind): VoiceChatJoinResult!
    voiceChatCreateInChat(input: VoiceChatInput!, cid: ID!, mediaInput: ConferenceJoinInput, mediaKind: ConferenceKind): VoiceChatJoinResult!
    voiceChatUpdate(id: ID!, input: VoiceChatInput!): VoiceChat!
    voiceChatEnd(id: ID!): VoiceChat!
    voiceChatSetPinnedMessage(id: ID!, message: String, spans: [MessageSpanInput!]): VoiceChat!
    voiceChatDeletePinnedMessage(id: ID!): VoiceChat!
}

extend type Query {
    voiceChat(id: ID!): VoiceChat!
}

extend type Subscription {
    voiceChatWatch(id: ID!): VoiceChat!
}

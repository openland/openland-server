type VoiceChat {
    id: ID!
    title: String
    adminsCount: Int!
    listenersCount: Int!
    speakersCount: Int!
    active: Boolean!
    speakers: [VoiceChatParticipant!]!
    listeners: [VoiceChatParticipant!]!
    me: VoiceChatParticipant
}

input VoiceChatInput {
    title: String!
}

type VoiceChatConnection {
    items: [VoiceChat!]!
    cursor: String
}

extend type User {
    currentVoiceChat: VoiceChat
}

extend type Mutation {
    voiceChatCreate(input: VoiceChatInput!): VoiceChat!
    voiceChatUpdate(id: ID!, input: VoiceChatInput!): VoiceChat!
    voiceChatEnd(id: ID!): VoiceChat!
}

extend type Query {
    voiceChat(id: ID!): VoiceChat!

    activeVoiceChats(first: Int!, after: String): VoiceChatConnection!
}
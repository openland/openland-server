#
# Credit Cards
#

type CreditCard {
    id: ID!
    brand: String!
    last4: String!
    expMonth: Int!
    expYear: Int!
    deleted: Boolean!
    isDefault: Boolean!
}

type CardSetupIntent {
    id: ID!
    clientSecret: String!
}

#
# Payment Intent
#

type PaymentIntent {
    id: ID!
    clientSecret: String!
}

#
# Subscriptions
#

enum PaidSubscriptionInterval {
    MONTHLY, YEARLY
}

enum PaidSubscriptionStatus {
    ACTIVE, CANCELED
}

type PaidSubscription {
    id: ID!
    title: String!
    amount: Int!
    interval: PaidSubscriptionInterval!
    status: PaidSubscriptionStatus!
}

#
# Wallet
#

type WalletAccount {
    id: ID!
    balance: Int!
}

enum WalletTransactionType {
    DEPOSIT, TRANSFER, WITHDRAW, PURCHASE
}

type WalletTransaction {
    id: ID!
    amount: Int!
    extraAmount: Int
    state: String!
    readableState: String!
    type: WalletTransactionType!
}

type WalletTransactionConnection {
    items: [WalletTransaction!]!
    cursor: String
}

extend type Query {
    myCards: [CreditCard!]!
    myAccount: WalletAccount!
    mySubscriptions: [PaidSubscription!]!
    
    walletTransactions(id: ID!, first: Int!, after: String): WalletTransactionConnection!
}

extend type Mutation {
    cardCreateSetupIntent(retryKey: String!): CardSetupIntent!
    cardCommitSetupIntent(id: ID!, pmid: ID!): CreditCard!
    
    cardDepositEnqueue(amount: Int!, retryKey: String!): Boolean!
    cardDepositIntent(id: ID!, amount: Int!, retryKey: String!): PaymentIntent!
    cardDepositIntentCommit(id: ID!): Boolean!

    cardRemove(id: ID!): CreditCard!
    cardMakeDefault(id: ID!): CreditCard!

    subscriptionCreateDonate(amount: Int!, retryKey: String!): PaidSubscription!
}
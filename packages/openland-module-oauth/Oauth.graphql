enum OauthScope {
    All,
    Zapier
}

type OauthApp {
    title: String!
    clientId: String!
    clientSecret: String!
    scopes: [OauthScope!]!
    owner: User!
    redirectUrls: [String!]
}

type OauthContext {
    app: OauthApp!
    state: String!
    redirectUrl: String!
    code: String!
}

input OauthAppInput {
    title: String
    scopes: [OauthScope!]
    redirectUrls: [String!]
}


extend type Query {
    myOauthApps: [OauthApp!]!
    oauthContext(code: String!): OauthContext
}

extend type Mutation {
    createOauthApp(input: OauthAppInput!): OauthApp!
    updateOuathApp(clientId: String!, input: OauthAppInput!): OauthApp!
}
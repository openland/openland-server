type ChannelConversation implements Conversation {
    id: ID!
    flexibleId: ID!
    title: String!
    photos: [String!]!
    members: [User!]!
    unreadCount: Int!
    topMessage: ConversationMessage
    settings: ConversationSettings!

    membersCount: Int!
    memberRequestsCount: Int!
    featured: Boolean!
    hidden: Boolean!
    description: String
    longDescription: String
    myStatus: ChannelMembershipStatus!
    organization: Organization
    isRoot: Boolean!

    photo: String
    photoRef: ImageRef
    
    socialImage: String
    socialImageRef: ImageRef
    pinnedMessage: ConversationMessage

    membersOnline: Int!
    myRole: String
}

enum ChannelMembershipStatus {
    invited
    member
    requested
    none
}

type ChannelMemberOrg {
    organization: Organization!
    role: String!
    status: String!
}

type ChannelMember {
    user: User!
    role: String!
    status: String!
}

type ChannelInvite {
    channel: ChannelConversation!
    invitedByUser: User!
}

type ChannelOrgInvite {
    channel: ChannelConversation!
    invitedByOrg: Organization!
    invitedByUser: User!
}

type ChannelJoinRequestOrg {
    organization: Organization!
    user: User!
}

type ChannelConversationConnectionEdge {
    node: ChannelConversation!
    cursor: String!
}

type ChannelConversationConnection {
    edges: [ChannelConversationConnectionEdge!]!
    pageInfo: PageInfo!
}

input ChannelInviteRequest {
    email: String!,
    emailText: String,
    firstName: String,
    lastName: String
}

extend type Mutation {
    alphaChannelCreate(title: String!, photoRef: ImageRefInput, message: String, description: String, oid: ID): Conversation!

    alphaChannelSetFeatured(channelId: ID!, featured: Boolean!): Conversation!
    alphaChannelHideFromSearch(channelId: ID!, hidden: Boolean!): Conversation!
    
    alphaChannelInvite(channelId: ID!, userId: ID!): ConversationUpdateResponse!
    alphaChannelJoin(channelId: ID!): ConversationUpdateResponse!
    alphaChannelRevokeInvite(channelId: ID!, userId: ID!): String!
    alphaChannelCancelRequest(channelId: ID!): String

    alphaChannelInviteMembers(channelId: ID!, inviteRequests: [ChannelInviteRequest!]!): String!
    alphaChannelJoinInvite(invite: String!): ID!
    alphaChannelRenewInviteLink(channelId: ID!): String!
}

extend type Query {
    alphaChannelsList(first: Int!, after: String): ConversationConnection!
    alphaChannelMembers(channelId: ID!): [ChannelMember!]!
    alphaChannelsFeatured: [ChannelConversation!]!
    alphaChannels(
        query: String,
        first: Int!,
        after: String,
        page: Int,
        sort: String
    ): ChannelConversationConnection!
    alphaChannelInviteInfo(uuid: String!): ChannelInvite
    alphaChannelInviteLink(channelId: ID!): String!
}


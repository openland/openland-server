#
# Invites
#

type Invite {
    id: ID!
    key: String!
    ttl: String
}

type InviteInfo {
    id: ID!
    key: String!
    orgId: ID!
    title: String!
    photo: String
    photoRef: ImageRef
    joined: Boolean!
    creator: User
    forEmail: String
    forName: String
}

type AppInvite {
    inviter: User!
}

type AppInviteInfo {
    inviter: User!
}

type InviteHistotyInfo {
    acceptedBy: User
    forEmail: String!
    isGlobal: Boolean!
}

extend type Query {
    alphaInvites: [Invite!]
    alphaInviteInfo(key: String!): InviteInfo
    appInvite: String!
    appInviteInfo(key: String!): AppInvite
    alphaAppInvite: String! @deprecated(reason: "renamed to 'appInvite'")
    alphaAppInviteInfo(key: String!): AppInviteInfo @deprecated(reason: "renamed to 'appInviteInfo'")
    alphaInvitesHistory: [InviteHistotyInfo!]
}

extend type Mutation {
    alphaCreateInvite: Invite!
    alphaDeleteInvite(id: ID!): String!
    alphaJoinInvite(key: String!): ID!
    joinAppInvite(key: String!): ID!
}
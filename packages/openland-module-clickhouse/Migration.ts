import { Context } from '@openland/context';
import DatabaseClient from './DatabaseClient';
import { Table } from './Table';
import { CodeBuilder } from '../openland-utils/CodeBuilder';
import { ColumnDefinition } from './ClickHouseClient';

export interface Migration {
    name: string;
    command: (ctx: Context, client: DatabaseClient) => Promise<void>;
}

export function buildMigration(table: Table<any>) {
    let code = new CodeBuilder();
    code.add();
    code.addMultiline(`
//
// ╔╗║║╦╔╗╔═╗╔═║║╔═╔╗╔╗╦╔═╦╗
// ╠╣║║║║║║╔╗╠═╬║╠═╠╝╠╣║╠═║║
// ║║╚╝║╚╝╚═╝╚═║╬╚═╠╗║║║╚═╩╝
//
`);
    code.add('migrations.push({');
    code.tab();
    code.add(`name: 'AUTOGENERATED-${table.name}-create',`);
    code.add('command: async (ctx: Context, db: DatabaseClient) => {');
    code.tab();
    let columns = table.schema.fields.map(a => ({ name: a.name, type: (a.field.nullable ? `Nullable(${a.field.dbType})` : a.field.dbType) as ColumnDefinition['type'] }));
    code.addMultiline(`await db.createTable(
        ctx, 
        '${table.name}', 
         // tslint:disable-next-line
        ${JSON.stringify(columns)}, 
        '${table.engineConfig.partition}', 
        '${table.engineConfig.orderBy}', 
        '${table.engineConfig.primaryKey}', 
        '${table.engineConfig.engine}'
    );`);
    code.add();
    code.unTab();
    code.add('}');
    code.unTab();
    code.add('});');

    return code.build();
}
type Query {
    alphaInvites: [Invite!]
    alphaInviteInfo(key: String!): InviteInfo

    #
    # Permits
    #

    permits(filter: String, type: PermitType, sort: PermitSorting, minUnits: Int,
            issuedYear: String, fromPipeline: Boolean,
            first: Int!, after: String, page: Int): PermitsConnection!
    permit(id: ID!): Permit
    permitsApprovalStats: Chart!
    permitsApprovalUnits: Chart!
    permitsUnitsIssuedStats: Chart!
    permitsUnitsFiledStats: Chart!
    permitsUnitsCompletedStats: Chart!
    permitsUnitsFiledStatsMonthly: Chart!

    #
    # Parcels
    #

    block(id: ID!): Block!
    parcel(id: ID!): Parcel!
    blocksConnection(
        state: String!, county: String!, city: String!, 
        query: String, 
        first: Int!, after: String, page: Int
    ): BlockConnection!
    parcelsConnection(
        state: String!, county: String!, city: String!, 
        query: String, 
        first: Int!, after: String, page: Int
    ): ParcelConnection!
    parcelsOverlay(box: GeoBox!, limit: Int!, filterZoning: [String!], query: String): [Parcel!]
    blocksOverlay(box: GeoBox!, limit: Int!, filterZoning: [String!], query: String): [Block!]

    alphaAllParcels(state: String!, county: String!, city: String!, query: String): [Parcel!]

    parcelFavorites: [Parcel!]!
    parcelFavoritesCount: Int!
    parcelsStats(query: String, state: String, county: String, city: String): Int!

    searchParcels(query:String!): [Parcel!]!

    #
    # Global
    #

    states(active: Boolean): [State!]!
    counties(stateId: ID!): [County!]!
    search(query: String!): SearchResult!
    users(query:String!): [User!]!

    #
    # Deals
    #

    deals: [Deal!]!
    dealsCount: Int!
    deal(id: ID!): Deal!

    #
    # Urbyn Opportunities
    #

    alphaOpportunity(id: ID!): Opportunity
    alphaOpportunities(state: OpportunityState, sort: OpportunitySort, query: String, first: Int!, after: String, page: Int): OpportunityConnection!
    alphaOpportunitiesCount(state: OpportunityState, query: String): Int!
    alphaOpportunitiesCapacity(state: OpportunityState, query: String): Int!
    alphaNextReviewOpportunity(state: OpportunityState!, sort: OpportunitySort, query: String, initialId: ID): Opportunity
    alphaOpportunityOverlay(box: GeoBox!, limit: Int!, query: String): [Opportunity!]
    alphaOpportunityGeoSearch(box: GeoBox!): OpportunityGeoSearch!
    alphaOpportunityUsers(state: OpportunityState, query: String): [String]
    alphaAllOpportunities(state: OpportunityState, sort: OpportunitySort, query: String): [Opportunity!]

    #
    # Folders
    #

    alphaFolders: [Folder!]!
    alphaFolder(id: ID!): Folder!
    alphaFolderItems(folderId: ID!, first: Int!, after: String, page: Int): FolderConnection!
    alphaFolderItemsOverlay(box: GeoBox!, limit: Int!, folderId: ID!): [FolderItem!]

    alphaParcelMap(box: GeoBox!, limit: Int!, query: String!, zoom: Int): [MapPoint!]!

    #
    # Tasks
    #

    alphaRefreshTask(id: ID!): Task!
}
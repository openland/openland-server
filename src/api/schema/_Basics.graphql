type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    itemsCount: Int!
    pagesCount: Int!
    currentPage: Int!
    openEnded: Boolean!
}

type Likes {
    liked: Boolean!
    count: Int
}

type Chart {
    labels: [String!]!
    datasets: [ChartDataSet!]!
}
  
type ChartDataSet {
    label: String!
    values: [Float!]!
}

type Picture {
    src: String
    url: String!
    retina: String!
}

type SearchResult {
    query: String!
}

type SearchHighlight {
    key: String!
    match: String!
}

type MapPoint {
    ref: String
    count: Int
    lat: Float!
    lon: Float!
}

enum MapSearchZoom {
    LOW
    MEDIUM
    HIGH
}

enum TaskStatus {
    IN_PROGRESS
    FAILED
    COMPLETED
}

type Task {
    id: ID!
    status: TaskStatus!
    result: String
}

input ImageCropInput {
    x: Int!
    y: Int!
    w: Int!
    h: Int!
}

type ImageCrop {
    x: Int!
    y: Int!
    w: Int!
    h: Int!
}

type ImageRef {
    uuid: String!
    crop: ImageCrop
}

input ImageRefInput {
    uuid: String!
    crop: ImageCropInput
}

type Range {
    from: Int
    to: Int
}

input RangeInput{
    from: Int
    to: Int
}
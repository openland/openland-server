type Account {
    id: ID!
    domain: String!
    name: String!
    city: String
    needAuthentication: Boolean!
    readAccess: Boolean!
    writeAccess: Boolean!
    generation: Int!
}

type User {
    id: ID!
    name: String!
    firstName: String!
    lastName: String
    picture: String
    phone: Int
    email: String!
    isYou: Boolean!
    isCreated: Boolean!
}

type ProfilePrefill {
    firstName: String
    lastName: String
    picture: String
}

type Permissions {
    roles: [String!]!
}

type MyAccount {
    id: ID!
    title: String!
}

type MyProfile {
    isLoggedIn: Boolean!
    isProfileCreated: Boolean!
    isAccountExists: Boolean!
    isAccountPicked: Boolean!
    isAccountActivated: Boolean!
    isCompleted: Boolean!
    isBlocked: Boolean!
}

input AvatarUpload {
    uploadId: String!
    cropX: Int!
    cropY: Int!
    cropW: Int!
    cropH: Int!
}

type Invite {
    id: ID!
    key: String!
}

type OrganizationAccount {
    id: ID!
    title: String!
    logo: String
    website: String
    # extras
    potentialSites: Range
    siteSizes: Range
    description: String
    twitter: String
    facebook: String
    developmentModels: [String]
    availability: [String]
    contacts: [String]
    landUse: [String]
    goodFor: [String]
    specialAttributes: [String]
}
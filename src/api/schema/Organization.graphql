type OrganizationContact {
    name: String!
    photo: String
    photoRef: ImageRef
    position: String
    email: String
    phone: String
    link: String
}

type Organization {
    id: ID!
    isMine: Boolean!
    name: String!
    photo: String
    photoRef: ImageRef

    website: String
    about: String
    twitter: String
    facebook: String
    contacts: [OrganizationContact!]!

    alphaFollowed: Boolean!

    alphaPotentialSites: [Range!]
    alphaSiteSizes: [Range!]
    alphaDevelopmentModels: [String!]
    alphaAvailability: [String!]
    alphaLandUse: [String!]
    alphaGoodFor: [String!]
    alphaSpecialAttributes: [String!]
}

extend type Query {
    myOrganization: Organization
    myOrganizations: [Organization!]!
    organization(id: ID!): Organization

    alphaAvailableOrganizationAccounts: [OrganizationAccount!]!
    alphaCurrentOrganizationProfile: AlphaOrganizationProfile!
    alphaOrganizationProfile(id: ID!): AlphaOrganizationProfile
}

extend type Mutation {
    alphaFollowOrganization(id: ID!, follow: Boolean!): Organization!

    alphaCreateOrganization(title: String!, website: String, role: String, logo: ImageRefInput, personal: Boolean): String!
    alphaEditOrganizationProfile(title: String, website: String, role: String, logo: ImageRefInput, extras: AlphaOrganizationProfileInput): String!
}
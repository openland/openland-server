interface WallEntity {
    id: ID!
    creationTime: Int!
    creator: User!
    lastEditor: User
    isPinned: Boolean!
    organization: Organization!
}

type PostLinkInfo {
    url: String
    title: String
    description: String
    imageURL: String
}

type PostLink {
    text: String!
    url: String!
    extraInfo: PostLinkInfo
}

input PostLinkInput {
    text: String!
    url: String!
}

type WallPost implements WallEntity {
    id: ID!
    creationTime: Int!
    creator: User!
    lastEditor: User
    isPinned: Boolean!
    organization: Organization!

    text: String!
    type: String! ## NEWS | UPDATE
    tags: [String!]
    links: [PostLink!]
}

input WallPostInput {
    isPinned: Boolean!

    text: String!
    type: String! ## NEWS | UPDATE
    tags: [String!]
    links: [PostLinkInput!]
}

type WallListing implements WallEntity {
    id: ID!
    creationTime: Int!
    creator: User!
    lastEditor: User
    isPinned: Boolean!
    organization: Organization!

    name: String!
    type: String!
    summary: String
    specialAttributes: [String!]
    status: String
    photo: ImageRef

    location: MapPoint
    locationTitle: String
    availability: String
    area: Int
    price: Int
    dealType: [String!]
    shapeAndForm: [String!]
    currentUse: [String!]
    goodFitFor: [String!]
    additionalLinks: [AlphaOrganizationListingLink!]

    shortDescription: String
    areaRange: Range
    geographies: [String!]
    landUse: [String!]
    unitCapacity: [String!]
    updatedAt: String!
}

input WallListingInput {
    isPinned: Boolean!
    name: String
    summary: String
    specialAttributes: [String!]
    status: String
    photo: ImageRefInput
    type: String!

    location: MapPointInput
    locationTitle: String
    availability: String
    area: Int
    price: Int
    dealType: [String!]
    shapeAndForm: [String!]
    currentUse: [String!]
    goodFitFor: [String!]
    additionalLinks: [AlphaOrganizationListingLinkInput!]

    shortDescription: String
    areaRange: RangeInput
    geographies: [String!]
    landUse: [String!]
    unitCapacity: [String!]
}

type WallEntityEdge {
    node: WallEntity!
    cursor: String!
}

type WallEntityConnection {
    edges: [WallEntityEdge!]!
    pageInfo: PageInfo!
    isPinned: Boolean!
}

extend type Query {
    wall(
        orgId: ID!
        first: Int!,
        after: String,
        page: Int
    ): WallEntityConnection

    wallMyOrg(
        first: Int!,
        after: String,
        page: Int
    ): WallEntityConnection

    wallEntity(id: ID!): WallEntity

    wallSearch(
        query: String,
        first: Int!,
        after: String,
        page: Int
    ): WallEntityConnection
}

extend type Mutation {
    wallAddPost(input: WallPostInput): WallPost!
    wallEditPost(id: ID!, input: WallPostInput): WallPost

    wallAddListing(input: WallListingInput): WallListing!
    wallEditListing(id: ID!, input: WallListingInput): WallListing

    wallPin(id: ID!): String!
    wallUnpin(id: ID!): String!

    wallDeleteEntity(id: ID!): String!
}